const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3001;

console.log('üöÄ –ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
if (!process.env.BOT_TOKEN) {
  console.error('‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  console.log('üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª server/.env —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º:');
  console.log('BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–∑–¥–µ—Å—å');
  process.exit(1);
}

try {
  // –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
  const bot = new TelegramBot(process.env.BOT_TOKEN, {
    polling: {
      interval: 300,
      autoStart: true,
      params: {
        timeout: 10
      }
    }
  });

  console.log('‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

  // –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –∫–æ–º–∞–Ω–¥–∞ /start
  bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    console.log('üéØ –ü–æ–ª—É—á–µ–Ω /start –æ—Ç:', chatId);
    
    bot.sendMessage(chatId, 
      'üéâ –ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é!\n\n' +
      '–û—Ç–ø—Ä–∞–≤—å /test –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n' +
      '–û—Ç–ø—Ä–∞–≤—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —ç—Ö–∞'
    ).catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message);
    });
  });

  // –ö–æ–º–∞–Ω–¥–∞ /test
  bot.onText(/\/test/, (msg) => {
    const chatId = msg.chat.id;
    console.log('‚úÖ –¢–µ—Å—Ç –æ—Ç:', chatId);
    bot.sendMessage(chatId, '‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!');
  });

  // –≠—Ö–æ-–æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  bot.on('message', (msg) => {
    if (msg.text && !msg.text.startsWith('/')) {
      const chatId = msg.chat.id;
      console.log('üì® –°–æ–æ–±—â–µ–Ω–∏–µ:', msg.text);
      bot.sendMessage(chatId, `–í—ã —Å–∫–∞–∑–∞–ª–∏: "${msg.text}"`);
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
  bot.on('polling_error', (error) => {
    console.error('üî¥ Polling Error:', error.message);
    console.error('–ö–æ–¥:', error.code);
  });

  bot.on('webhook_error', (error) => {
    console.error('üî¥ Webhook Error:', error.message);
  });

  bot.on('error', (error) => {
    console.error('üî¥ General Error:', error.message);
  });

  // –ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä
  app.get('/', (req, res) => {
    res.json({ 
      status: 'Bot is running',
      timestamp: new Date().toISOString()
    });
  });

  app.listen(PORT, () => {
    console.log(`üåê HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`ü§ñ –ë–æ—Ç –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...`);
    console.log(`üìù –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start –≤–∞—à–µ–º—É –±–æ—Ç—É`);
  });

} catch (error) {
  console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:');
  console.error('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
  console.error('–°—Ç–µ–∫:', error.stack);
  process.exit(1);
}